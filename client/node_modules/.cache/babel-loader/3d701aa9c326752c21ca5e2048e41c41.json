{"ast":null,"code":"var _jsxFileName = \"/home/jsarabia/Documents/Programming/projects/react-projects/react-blog/client/src/components/singlePost/SinglePost.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./singlePost.css\";\nimport { useLocation } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { useEffect, useState, useContext } from \"react\";\nimport { Context } from \"../../context/Context\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SinglePost = () => {\n  _s();\n\n  const location = useLocation();\n  const path = location.pathname.split(\"/\")[2];\n  const [post, setPost] = useState({});\n  const publicFolder = \"https://react-blog-123.herokuapp.com/images/\";\n  const {\n    user\n  } = useContext(Context);\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [updateMode, setUpdateMode] = useState(false); // Fetch the post's id\n\n  useEffect(() => {\n    const fetchPost = async () => {\n      const res = await axios.get(\"/posts/\" + path);\n      setPost(res.data);\n      setTitle(res.data.title);\n      setDesc(res.data.desc);\n    };\n\n    fetchPost();\n  }, [path]); // Update Post function\n\n  const handleUpdate = async e => {\n    try {\n      await axios.put(`/posts/${post._id}`, {\n        username: user.username,\n        title,\n        desc\n      });\n      setUpdateMode(false);\n    } catch (error) {}\n  }; // Delete Post function\n\n\n  const handleDelete = async e => {\n    try {\n      await axios.delete(`/posts/${post._id}`, {\n        data: {\n          username: user.username\n        }\n      });\n      window.location.replace(\"/\");\n    } catch (error) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"singlePost\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"singlePostWrapper\",\n      children: [post.photo && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: publicFolder + post.photo,\n        alt: \"Post\",\n        className: \"singlePostImg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        className: \"singlePostTitleInput\",\n        autofocus: true,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"singlePostTitle\",\n        children: [title, post.username === (user === null || user === void 0 ? void 0 : user.username) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"singlePostEdit\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlePostIcon far fa-edit\",\n            onClick: () => setUpdateMode(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlePostIcon far fa-trash-alt\",\n            onClick: handleDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"singlePostInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"singlePostAuthor\",\n          children: [\"Author:\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n            to: `/?user=${post.username}`,\n            className: \"link\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: post.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"singlePostDate\",\n          children: \"1 hour ago\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"singlePostDescriptionInput\",\n        value: desc,\n        onChange: e => setDesc(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"singlePostDescription\",\n        children: desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), updateMode && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"singlePostButton\",\n      onClick: handleUpdate,\n      children: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SinglePost, \"xs7JL4oKuIn8mxMMLFGIhzF2qFM=\", false, function () {\n  return [useLocation];\n});\n\n_c = SinglePost;\nexport default SinglePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"sources":["/home/jsarabia/Documents/Programming/projects/react-projects/react-blog/client/src/components/singlePost/SinglePost.jsx"],"names":["useLocation","Link","useEffect","useState","useContext","Context","axios","SinglePost","location","path","pathname","split","post","setPost","publicFolder","user","title","setTitle","desc","setDesc","updateMode","setUpdateMode","fetchPost","res","get","data","handleUpdate","e","put","_id","username","error","handleDelete","delete","window","replace","photo","target","value"],"mappings":";;;AAAA,OAAO,kBAAP;AACA,SAASA,WAAT,QAA4B,cAA5B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,IAAI,GAAGD,QAAQ,CAACE,QAAT,CAAkBC,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,CAAb;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMW,YAAY,GAAG,8CAArB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAWX,UAAU,CAACC,OAAD,CAA3B;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACe,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACiB,UAAD,EAAaC,aAAb,IAA8BlB,QAAQ,CAAC,KAAD,CAA5C,CARuB,CAUvB;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMoB,SAAS,GAAG,YAAY;AAC5B,YAAMC,GAAG,GAAG,MAAMjB,KAAK,CAACkB,GAAN,CAAU,YAAYf,IAAtB,CAAlB;AACAI,MAAAA,OAAO,CAACU,GAAG,CAACE,IAAL,CAAP;AACAR,MAAAA,QAAQ,CAACM,GAAG,CAACE,IAAJ,CAAST,KAAV,CAAR;AACAG,MAAAA,OAAO,CAACI,GAAG,CAACE,IAAJ,CAASP,IAAV,CAAP;AACD,KALD;;AAMAI,IAAAA,SAAS;AACV,GARQ,EAQN,CAACb,IAAD,CARM,CAAT,CAXuB,CAqBvB;;AACA,QAAMiB,YAAY,GAAG,MAAOC,CAAP,IAAa;AAChC,QAAI;AACF,YAAMrB,KAAK,CAACsB,GAAN,CAAW,UAAShB,IAAI,CAACiB,GAAI,EAA7B,EAAgC;AACpCC,QAAAA,QAAQ,EAAEf,IAAI,CAACe,QADqB;AAEpCd,QAAAA,KAFoC;AAGpCE,QAAAA;AAHoC,OAAhC,CAAN;AAKAG,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD,KAPD,CAOE,OAAOU,KAAP,EAAc,CAAE;AACnB,GATD,CAtBuB,CAiCvB;;;AACA,QAAMC,YAAY,GAAG,MAAOL,CAAP,IAAa;AAChC,QAAI;AACF,YAAMrB,KAAK,CAAC2B,MAAN,CAAc,UAASrB,IAAI,CAACiB,GAAI,EAAhC,EAAmC;AACvCJ,QAAAA,IAAI,EAAE;AAAEK,UAAAA,QAAQ,EAAEf,IAAI,CAACe;AAAjB;AADiC,OAAnC,CAAN;AAGAI,MAAAA,MAAM,CAAC1B,QAAP,CAAgB2B,OAAhB,CAAwB,GAAxB;AACD,KALD,CAKE,OAAOJ,KAAP,EAAc,CAAE;AACnB,GAPD;;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,iBACGnB,IAAI,CAACwB,KAAL,iBACC;AACE,QAAA,GAAG,EAAEtB,YAAY,GAAGF,IAAI,CAACwB,KAD3B;AAEE,QAAA,GAAG,EAAC,MAFN;AAGE,QAAA,SAAS,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA,cAFJ,EASGhB,UAAU,gBACT;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAEJ,KAFT;AAGE,QAAA,SAAS,EAAC,sBAHZ;AAIE,QAAA,SAAS,MAJX;AAKE,QAAA,QAAQ,EAAGW,CAAD,IAAOV,QAAQ,CAACU,CAAC,CAACU,MAAF,CAASC,KAAV;AAL3B;AAAA;AAAA;AAAA;AAAA,cADS,gBAST;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA,mBACGtB,KADH,EAGGJ,IAAI,CAACkB,QAAL,MAAkBf,IAAlB,aAAkBA,IAAlB,uBAAkBA,IAAI,CAAEe,QAAxB,kBACC;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACE;AACE,YAAA,SAAS,EAAC,4BADZ;AAEE,YAAA,OAAO,EAAE,MAAMT,aAAa,CAAC,IAAD;AAF9B;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE;AACE,YAAA,SAAS,EAAC,iCADZ;AAEE,YAAA,OAAO,EAAEW;AAFX;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBJ,eAmCE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACE;AAAM,UAAA,SAAS,EAAC,kBAAhB;AAAA,gCACU,GADV,eAEE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAG,UAASpB,IAAI,CAACkB,QAAS,EAAlC;AAAqC,YAAA,SAAS,EAAC,MAA/C;AAAA,mCACE;AAAA,wBAAIlB,IAAI,CAACkB;AAAT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AAAM,UAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cAnCF,EA4CGV,UAAU,gBACT;AACE,QAAA,SAAS,EAAE,4BADb;AAEE,QAAA,KAAK,EAAEF,IAFT;AAGE,QAAA,QAAQ,EAAGS,CAAD,IAAOR,OAAO,CAACQ,CAAC,CAACU,MAAF,CAASC,KAAV;AAH1B;AAAA;AAAA;AAAA;AAAA,cADS,gBAOT;AAAG,QAAA,SAAS,EAAC,uBAAb;AAAA,kBAAsCpB;AAAtC;AAAA;AAAA;AAAA;AAAA,cAnDJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAuDGE,UAAU,iBACT;AAAQ,MAAA,SAAS,EAAC,kBAAlB;AAAqC,MAAA,OAAO,EAAEM,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAxDJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+DD,CA1GD;;GAAMnB,U;UACaP,W;;;KADbO,U;AA4GN,eAAeA,UAAf","sourcesContent":["import \"./singlePost.css\";\nimport { useLocation } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { useEffect, useState, useContext } from \"react\";\nimport { Context } from \"../../context/Context\";\nimport axios from \"axios\";\n\nconst SinglePost = () => {\n  const location = useLocation();\n  const path = location.pathname.split(\"/\")[2];\n  const [post, setPost] = useState({});\n  const publicFolder = \"https://react-blog-123.herokuapp.com/images/\";\n  const { user } = useContext(Context);\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [updateMode, setUpdateMode] = useState(false);\n\n  // Fetch the post's id\n  useEffect(() => {\n    const fetchPost = async () => {\n      const res = await axios.get(\"/posts/\" + path);\n      setPost(res.data);\n      setTitle(res.data.title);\n      setDesc(res.data.desc);\n    };\n    fetchPost();\n  }, [path]);\n\n  // Update Post function\n  const handleUpdate = async (e) => {\n    try {\n      await axios.put(`/posts/${post._id}`, {\n        username: user.username,\n        title,\n        desc,\n      });\n      setUpdateMode(false);\n    } catch (error) {}\n  };\n\n  // Delete Post function\n  const handleDelete = async (e) => {\n    try {\n      await axios.delete(`/posts/${post._id}`, {\n        data: { username: user.username },\n      });\n      window.location.replace(\"/\");\n    } catch (error) {}\n  };\n\n  return (\n    <div className=\"singlePost\">\n      <div className=\"singlePostWrapper\">\n        {post.photo && (\n          <img\n            src={publicFolder + post.photo}\n            alt=\"Post\"\n            className=\"singlePostImg\"\n          />\n        )}\n        {/* For update or simple mode: */}\n        {updateMode ? (\n          <input\n            type=\"text\"\n            value={title}\n            className=\"singlePostTitleInput\"\n            autofocus\n            onChange={(e) => setTitle(e.target.value)}\n          />\n        ) : (\n          <h1 className=\"singlePostTitle\">\n            {title}\n            {/* Buttons for edit/delete post */}\n            {post.username === user?.username && (\n              <div className=\"singlePostEdit\">\n                <i\n                  className=\"singlePostIcon far fa-edit\"\n                  onClick={() => setUpdateMode(true)}\n                ></i>\n                <i\n                  className=\"singlePostIcon far fa-trash-alt\"\n                  onClick={handleDelete}\n                ></i>\n              </div>\n            )}\n          </h1>\n        )}\n        <div className=\"singlePostInfo\">\n          <span className=\"singlePostAuthor\">\n            Author:{\" \"}\n            <Link to={`/?user=${post.username}`} className=\"link\">\n              <b>{post.username}</b>\n            </Link>\n          </span>\n          <span className=\"singlePostDate\">1 hour ago</span>\n        </div>\n        {updateMode ? (\n          <textarea\n            className={\"singlePostDescriptionInput\"}\n            value={desc}\n            onChange={(e) => setDesc(e.target.value)}\n          />\n        ) : (\n          <p className=\"singlePostDescription\">{desc}</p>\n        )}\n      </div>\n      {updateMode && (\n        <button className=\"singlePostButton\" onClick={handleUpdate}>\n          Update\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default SinglePost;\n"]},"metadata":{},"sourceType":"module"}